{"ast":null,"code":"// import Web3 from 'web3';\n// let web3;\n// if(typeof window !== 'undefined' && typeof window.web3 !==undefined){\n//     web3 = new Web3(window.web3.currentProvider);\n//     const net=web3.eth.net.getId();\n//     const accounts=web3.eth.getAccounts();\n//     // window.alert(\"open using metamssk\");\n// }\n// else{\n//    const provider=new Web3.providers.HttpProvider(\n//     'https://rinkeby.infura.io/v3/efac3104b14741c8a58856af59c7c7bb'\n// );\n//     web3 = new Web3(provider);\n// }\n// export default web3;\nimport Web3 from \"web3\";\nlet web3; // Legacy dapp browsers...\n\nif (true && typeof window.web3 !== undefined) {\n  // Use Mist/MetaMask's provider.\n  web3 = new Web3(window.web3.currentProvider);\n  console.log(\"Injected web3 detected.\");\n} // Fallback to localhost; use dev console port by default...\nelse {\n    const provider = new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\");\n    web3 = new Web3(provider);\n    console.log(\"No web3 instance injected, using Local web3.\");\n  }\n\nexport default web3;","map":{"version":3,"sources":["/mnt/c/Users/ragha/Downloads/blockchain/Campaign/ethereum/web3.js"],"names":["Web3","web3","window","undefined","currentProvider","console","log","provider","providers","HttpProvider"],"mappings":"AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,IAAIC,IAAJ,C,CAGM;;AACC,IAAI,QAA+B,OAAOC,MAAM,CAACD,IAAd,KAAuBE,SAA1D,EAAqE;AACpE;AACAF,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACD,IAAP,CAAYG,eAArB,CAAP;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAED,CALA,CAMD;AANC,KAOI;AACH,UAAMC,QAAQ,GAAG,IAAIP,IAAI,CAACQ,SAAL,CAAeC,YAAnB,CACf,uBADe,CAAjB;AAGCR,IAAAA,IAAI,GAAG,IAAID,IAAJ,CAASO,QAAT,CAAP;AACDF,IAAAA,OAAO,CAACC,GAAR,CAAY,8CAAZ;AAED;;AAIP,eAAeL,IAAf","sourcesContent":["// import Web3 from 'web3';\r\n\r\n// let web3;\r\n// if(typeof window !== 'undefined' && typeof window.web3 !==undefined){\r\n\r\n//     web3 = new Web3(window.web3.currentProvider);\r\n//     const net=web3.eth.net.getId();\r\n//     const accounts=web3.eth.getAccounts();\r\n    \r\n//     // window.alert(\"open using metamssk\");\r\n\r\n// }\r\n// else{\r\n//    const provider=new Web3.providers.HttpProvider(\r\n//     'https://rinkeby.infura.io/v3/efac3104b14741c8a58856af59c7c7bb'\r\n// );\r\n   \r\n//     web3 = new Web3(provider);\r\n  \r\n\r\n   \r\n// }\r\n\r\n// export default web3;\r\nimport Web3 from \"web3\";\r\n\r\nlet web3\r\n    \r\n      \r\n      // Legacy dapp browsers...\r\n       if (typeof window !== undefined && typeof window.web3 !== undefined) {\r\n        // Use Mist/MetaMask's provider.\r\n        web3 = new Web3(window.web3.currentProvider);\r\n        console.log(\"Injected web3 detected.\");\r\n       \r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"HTTP://127.0.0.1:7545\"\r\n        );\r\n         web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n       \r\n      }\r\n   \r\n\r\n\r\nexport default web3;"]},"metadata":{},"sourceType":"module"}