{"ast":null,"code":"import Web3 from 'web3';\nlet web3;\n\nif (false && typeof window.web3 !== undefined) {\n  web3 = new Web3(window.web3.currentProvider);\n  const net = web3.eth.net.getId();\n  const accounts = web3.eth.getAccounts(); // window.alert(\"open using metamssk\");\n\n  console.log(\"Injected web3 detected.\");\n} else {\n  const provider = new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\");\n  web3 = new Web3(provider);\n  console.log(\"Injected web3 detected.\");\n} // // export default web3;\n// import Web3 from \"web3\";\n// let web3\n//       // Legacy dapp browsers...\n//        if (typeof window !== undefined && typeof window.web3 !== undefined) {\n//         // Use Mist/MetaMask's provider.\n//         web3 = new Web3(window.web3.currentProvider);\n//         console.log(\"Injected web3 detected.\");\n//       }\n//       // Fallback to localhost; use dev console port by default...\n//       else {\n//         const provider = new Web3.providers.HttpProvider(\n//           \"HTTP://127.0.0.1:7545\"\n//         );\n//          web3 = new Web3(provider);\n//         console.log(\"No web3 instance injected, using Local web3.\");\n//       }\n\n\nexport default web3;","map":{"version":3,"sources":["/mnt/c/Users/ragha/Downloads/blockchain/Campaign/ethereum/web3.js"],"names":["Web3","web3","window","undefined","currentProvider","net","eth","getId","accounts","getAccounts","console","log","provider","providers","HttpProvider"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,IAAIC,IAAJ;;AACA,IAAG,SAAiC,OAAOC,MAAM,CAACD,IAAd,KAAsBE,SAA1D,EAAoE;AAEhEF,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACD,IAAP,CAAYG,eAArB,CAAP;AACA,QAAMC,GAAG,GAACJ,IAAI,CAACK,GAAL,CAASD,GAAT,CAAaE,KAAb,EAAV;AACA,QAAMC,QAAQ,GAACP,IAAI,CAACK,GAAL,CAASG,WAAT,EAAf,CAJgE,CAMhE;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAEH,CATD,MAUI;AACD,QAAMC,QAAQ,GAAC,IAAIZ,IAAI,CAACa,SAAL,CAAeC,YAAnB,CACd,uBADc,CAAf;AAICb,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASY,QAAT,CAAP;AAEAF,EAAAA,OAAO,CAACC,GAAR,CAAY,yBAAZ;AAEH,C,CAED;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;;AAIA,eAAeV,IAAf","sourcesContent":["import Web3 from 'web3';\r\n\r\nlet web3;\r\nif(typeof window !== 'undefined' && typeof window.web3 !==undefined){\r\n\r\n    web3 = new Web3(window.web3.currentProvider);\r\n    const net=web3.eth.net.getId();\r\n    const accounts=web3.eth.getAccounts();\r\n    \r\n    // window.alert(\"open using metamssk\");\r\n    console.log(\"Injected web3 detected.\");\r\n\r\n}\r\nelse{\r\n   const provider=new Web3.providers.HttpProvider(\r\n    \"HTTP://127.0.0.1:7545\"\r\n);\r\n   \r\n    web3 = new Web3(provider);\r\n  \r\n    console.log(\"Injected web3 detected.\");\r\n   \r\n}\r\n\r\n// // export default web3;\r\n// import Web3 from \"web3\";\r\n\r\n// let web3\r\n    \r\n      \r\n//       // Legacy dapp browsers...\r\n//        if (typeof window !== undefined && typeof window.web3 !== undefined) {\r\n//         // Use Mist/MetaMask's provider.\r\n//         web3 = new Web3(window.web3.currentProvider);\r\n//         console.log(\"Injected web3 detected.\");\r\n       \r\n//       }\r\n//       // Fallback to localhost; use dev console port by default...\r\n//       else {\r\n//         const provider = new Web3.providers.HttpProvider(\r\n//           \"HTTP://127.0.0.1:7545\"\r\n//         );\r\n//          web3 = new Web3(provider);\r\n//         console.log(\"No web3 instance injected, using Local web3.\");\r\n       \r\n//       }\r\n   \r\n\r\n\r\nexport default web3;"]},"metadata":{},"sourceType":"module"}