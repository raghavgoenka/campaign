{"ast":null,"code":"// import Web3 from 'web3';\n// let web3;\n// if(typeof window !== 'undefined' && typeof window.web3 !==undefined){\n//     web3 = new Web3(window.web3.currentProvider);\n//     const net=web3.eth.net.getId();\n//     const accounts=web3.eth.getAccounts();\n//     // window.alert(\"open using metamssk\");\n// }\n// else{\n//    const provider=new Web3.providers.HttpProvider(\n//     'https://rinkeby.infura.io/v3/efac3104b14741c8a58856af59c7c7bb'\n// );\n//     web3 = new Web3(provider);\n// }\n// export default web3;\nimport Web3 from \"web3\";\nlet web3;\n\nif (false && typeof window.ethereum) {\n  web3 = new Web3(window.ethereum);\n\n  try {\n    // Request account access if needed\n    window.ethereum.enable();\n    console;\n  } catch (error) {\n    console.log(error);\n  }\n} // Legacy dapp browsers...\nelse if (false && typeof window.web3) {\n    // Use Mist/MetaMask's provider.\n    web3 = window.web3;\n    console.log(\"Injected web3 detected.\");\n  } // Fallback to localhost; use dev console port by default...\n  else {\n      const provider = new Web3.providers.HttpProvider(\"HTTP://127.0.0.1:7545\");\n      web3 = new Web3(provider);\n      console.log(\"No web3 instance injected, using Local web3.\");\n    }\n\nexport default web3;","map":{"version":3,"sources":["/mnt/c/Users/ragha/Downloads/blockchain/Campaign/ethereum/web3.js"],"names":["Web3","web3","window","ethereum","enable","console","error","log","provider","providers","HttpProvider"],"mappings":"AAAA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AAEA;AAIA;AAEA;AACA,OAAOA,IAAP,MAAiB,MAAjB;AAEA,IAAIC,IAAJ;;AAEM,IAAI,SAAiC,OAAOC,MAAM,CAACC,QAAnD,EAA6D;AAC1DF,EAAAA,IAAI,GAAG,IAAID,IAAJ,CAASE,MAAM,CAACC,QAAhB,CAAP;;AACD,MAAI;AACF;AACCD,IAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACHC,IAAAA,OAAO;AAEN,GALD,CAKE,OAAOC,KAAP,EAAc;AACdD,IAAAA,OAAO,CAACE,GAAR,CAAYD,KAAZ;AACD;AACF,CAVD,CAWA;AAXA,KAYK,IAAI,SAAiC,OAAOJ,MAAM,CAACD,IAAnD,EAAyD;AAC5D;AACCA,IAAAA,IAAI,GAAGC,MAAM,CAACD,IAAd;AACDI,IAAAA,OAAO,CAACE,GAAR,CAAY,yBAAZ;AAED,GALI,CAML;AANK,OAOA;AACH,YAAMC,QAAQ,GAAG,IAAIR,IAAI,CAACS,SAAL,CAAeC,YAAnB,CACf,uBADe,CAAjB;AAGCT,MAAAA,IAAI,GAAG,IAAID,IAAJ,CAASQ,QAAT,CAAP;AACDH,MAAAA,OAAO,CAACE,GAAR,CAAY,8CAAZ;AAED;;AAIP,eAAeN,IAAf","sourcesContent":["// import Web3 from 'web3';\r\n\r\n// let web3;\r\n// if(typeof window !== 'undefined' && typeof window.web3 !==undefined){\r\n\r\n//     web3 = new Web3(window.web3.currentProvider);\r\n//     const net=web3.eth.net.getId();\r\n//     const accounts=web3.eth.getAccounts();\r\n    \r\n//     // window.alert(\"open using metamssk\");\r\n\r\n// }\r\n// else{\r\n//    const provider=new Web3.providers.HttpProvider(\r\n//     'https://rinkeby.infura.io/v3/efac3104b14741c8a58856af59c7c7bb'\r\n// );\r\n   \r\n//     web3 = new Web3(provider);\r\n  \r\n\r\n   \r\n// }\r\n\r\n// export default web3;\r\nimport Web3 from \"web3\";\r\n\r\nlet web3\r\n    \r\n      if (typeof window !== 'undefined' && typeof window.ethereum) {\r\n         web3 = new Web3(window.ethereum);\r\n        try {\r\n          // Request account access if needed\r\n           window.ethereum.enable();\r\n        console\r\n         \r\n        } catch (error) {\r\n          console.log(error);\r\n        }\r\n      }\r\n      // Legacy dapp browsers...\r\n      else if (typeof window !== 'undefined' && typeof window.web3) {\r\n        // Use Mist/MetaMask's provider.\r\n         web3 = window.web3;\r\n        console.log(\"Injected web3 detected.\");\r\n       \r\n      }\r\n      // Fallback to localhost; use dev console port by default...\r\n      else {\r\n        const provider = new Web3.providers.HttpProvider(\r\n          \"HTTP://127.0.0.1:7545\"\r\n        );\r\n         web3 = new Web3(provider);\r\n        console.log(\"No web3 instance injected, using Local web3.\");\r\n       \r\n      }\r\n   \r\n\r\n\r\nexport default web3;"]},"metadata":{},"sourceType":"module"}